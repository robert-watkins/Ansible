---
- name: Update Usernames to All Caps convention
  hosts: all
  become: yes
  vars: 
    users: 
      robert:
        rename: yes
        old_name: admin_rwatkins
        new_name: rwatkins
        ssh: true
        ssh_key: # ansible test key
        
      kraj:
        rename: yes
        old_name: admin_kraj
        new_name: kraj
        ssh: true
        ssh_key: # ansible test key
        
      davis:  
        rename: yes
        old_name: admin_davis
        new_name: davis
        ssh: true
        ssh_key: # ansible test key
        
      kevin:  
        rename: no
        old_name: admin_kevin
        new_name: kevin
        ssh: false
        ssh_key: # ansible test key
      
      jackie:  
        rename: no
        old_name: admin_jackie
        new_name: jackie
        ssh: false
        ssh_key: # ansible test key
      
      blue:
        rename: no
        old_name: orange
        new_name: blue
        ssh: true
        ssh_key: # ansible test key
      
      
    
  
  tasks:
  - name: Collect list of existing users
    #command: "awk -F: '$3 >= 1000 { print $1}' /etc/passwd | grep -v nobody | grep admin_ | sed ':a;N;$!ba;s/\n/,/g'"
    command: "echo $(awk -F: '$3 >= 1000 {print $1}' /etc/passwd) | sed 's/ /,/g' | sed 's/nobody,//g'"
    register: admins
    changed_when: admins.rc == 2
  
  - debug:
      msg: admins.stdout
    
    
  - name: Make changes
    block:
      - name: Move home directory
        user:
          name: "{{ item.value.old_name }}"
          home: "/home/{{ item.value.new_name }}"
          move_home: yes
        loop: "{{ lookup('dict', users) }}"
        when: item.value.old_name in admins.stdout_lines and item.value.rename | bool
        
      - name: Rename Users
        command: usermod --login "{{ item.value.new_name }}" "{{ item.value.old_name }}"
        loop: "{{ lookup('dict', users) }}"
        when: item.value.old_name in admins.stdout_lines and item.value.rename | bool
    
      - name: Install ssh key
        authorized_key:
          user: "{{ item.value.new_name }}"
          key: "{{ item.value.ssh_key }}"
          state: present
        when: item.value.ssh
        loop: "{{ lookup('dict', users) }}"
    ignore_errors: yes
    